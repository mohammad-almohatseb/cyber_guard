from datetime import datetime
from typing import Annotated, List, Optional
from typing import Optional, List
from typing import List, Dict, Any

from beanie import Document, Indexed
from beanie.odm.fields import PydanticObjectId
from pydantic import Field

from app.api.models.BaseModelNoNone import BaseModelNoNone



class WebVulnerabilityExploitingModel(Document,BaseModelNoNone):
    id: PydanticObjectId = Field(default_factory=PydanticObjectId, alias="_id")
    target: Annotated[str, Indexed(unique=True)]
    
    sql_injection_data: List[Dict[str, Any]] = Field(default_factory=list)
    xss_data: List[Dict[str, Any]] = Field(default_factory=list)
    path_traversal_data: List[Dict[str, Any]] = Field(default_factory=list)
    os_command_injection_data: List[Dict[str, Any]] = Field(default_factory=list)
    redirect_data: List[Dict[str, Any]] = Field(default_factory=list)
    
    class settings:
        name = "web_vulnerability_exploiting"
        
        

class NetworkVulnerabilityExploitingModel(Document,BaseModelNoNone):
    id: PydanticObjectId = Field(default_factory=PydanticObjectId, alias="_id")
    target: Annotated[str, Indexed(unique=True)]
    timestamp: Optional[datetime] = Field(default_factory=datetime.now, alias="timestamp")
    vsftpd_exploiting_data: List[Dict[str, Any]]
    vnc_exploiting_data: List[Dict[str, Any]] = Field(default_factory=list)
    apache_tomcat_data: Optional[List[dict]] = None

    class settings:
        name = "network_vulnerability_exploiting"
        
        